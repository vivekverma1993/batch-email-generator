# Frontend Dockerfile - Serves static HTML/CSS/JS files with nginx
FROM nginx:alpine

# Copy HTML files to nginx html directory
COPY ui/ /usr/share/nginx/html/

# Create nginx configuration for SPA routing and API proxy
RUN cat > /etc/nginx/conf.d/default.conf << 'EOF'
server {
    listen 80;
    server_name localhost;
    
    # Serve static files
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
        
        # Enable gzip compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }
    
    # Proxy API requests to the backend
    location /api/ {
        proxy_pass http://app:8000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Support for Server-Sent Events
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
    }
    
    # Health check endpoint
    location /frontend-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
EOF

# Create startup script to replace API URLs based on environment
RUN cat > /docker-entrypoint.sh << 'EOF'
#!/bin/sh

# Get API base URL from environment or use default
API_BASE_URL=${API_BASE_URL:-http://localhost:8000}

# Replace API_BASE_URL in HTML files
echo "Configuring frontend with API_BASE_URL: $API_BASE_URL"

# Update index.html
sed -i "s|const API_BASE_URL = 'http://localhost:8000';|const API_BASE_URL = '$API_BASE_URL';|g" /usr/share/nginx/html/index.html

# Update history.html  
sed -i "s|const API_BASE_URL = 'http://localhost:8000';|const API_BASE_URL = '$API_BASE_URL';|g" /usr/share/nginx/html/history.html

# Start nginx
exec nginx -g 'daemon off;'
EOF

# Make startup script executable
RUN chmod +x /docker-entrypoint.sh

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/frontend-health || exit 1

# Use custom entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]
